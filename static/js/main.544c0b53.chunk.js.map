{"version":3,"sources":["pages/NewPostPage.js","pages/PostCardPage.js","components/Card.js","pages/PostsPage.js","App.js","reportWebVitals.js","index.js"],"names":["NewPostPage","props","className","to","onSubmit","evt","preventDefault","handleSubmit","placeholder","value","message","onChange","target","handleMessage","type","PostCardPage","actualParams","useParams","actualItem","listing","filter","item","Number","id","useState","isEditedMode","setEditedMode","console","log","changePost","changePostSubmit","newPost","Editing","defaultValue","content","Staged","moment","created","fromNow","onClick","deletePost","Card","PostsPage","map","App","url","setListing","setMessage","useEffect","fetch","then","response","json","data","path","exact","element","newItem","method","body","JSON","stringify","headers","document","location","href","length","post","changedItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.544c0b53.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\r\n\r\nconst NewPostPage = props => {\r\n\r\n  const handleMessageChange = evt => {\r\n    const {value} = evt.target;\r\n    props.handleMessage(value);\r\n  }\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    props.handleSubmit();\r\n  }\r\n\r\n  return (\r\n    <div className=\"NewPostPage\">\r\n      <NavLink to=\"/homeworks-router-crud/\">Close</NavLink>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea placeholder=\"Пост, относящийся к курсу React\" value={props.message} onChange={handleMessageChange}></textarea>\r\n        <button type=\"submit\">Опубликовать</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewPostPage;","import { useParams } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst PostCardPage = (props) => {\r\n\r\n  const actualParams = useParams();\r\n  const actualItem = props.listing.filter(item => Number(item.id) === Number(actualParams.id));\r\n  const [isEditedMode, setEditedMode] = useState(false);\r\n\r\n  console.log(actualItem);\r\n\r\n  const changePost = () => {\r\n    setEditedMode(true);\r\n  }\r\n\r\n  const deletePost = id => {\r\n    props.deletePost(id);\r\n  }\r\n\r\n  const changePostSubmit = evt => {\r\n    evt.preventDefault();\r\n    console.log(evt);\r\n    const newPost = evt.target[0].value;\r\n    console.log(newPost);\r\n    props.changePostSubmit(actualItem[0].id, newPost);\r\n  }\r\n\r\n  const Editing = () => {\r\n    return (\r\n      <form onSubmit={changePostSubmit}>\r\n        <textarea defaultValue={actualItem[0].content} />\r\n        <input type=\"submit\" />\r\n      </form>\r\n    )\r\n  }\r\n\r\n  const Staged = () => {\r\n    return (\r\n      <>\r\n        <div className=\"PostCardPage_created\">Добавлено: {moment(actualItem[0].created).fromNow()}</div>\r\n        <div className=\"PostCardPage_content\">{actualItem[0].content}</div>\r\n        <div className=\"PostCardPage_buttons\">\r\n          <button className=\"blue-button\" onClick={changePost}>Изменить</button>\r\n          <button className=\"red-button\" onClick={() => deletePost(actualItem[0].id)}>Удалить</button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"PostCardPage\">\r\n      {isEditedMode ? <Editing/> : <Staged/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostCardPage;","import moment from 'moment';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Card = ({item}) => {\r\n\r\n  return (\r\n    <NavLink className=\"Card\" to={`/homeworks-router-crud/posts/${item.id}`}>\r\n      <div className=\"card_created\">Добавлено: {moment(item.created).fromNow()}</div>\r\n      <div className=\"card_content\">{item.content}</div>\r\n    </NavLink>\r\n  )\r\n}\r\n\r\nexport default Card;","import { NavLink } from \"react-router-dom\";\r\nimport Card from \"../components/Card\";\r\n\r\nconst PostsPage = ({listing}) => {\r\n  return (\r\n    <div className=\"PostsPage\">\r\n      <NavLink to=\"/homeworks-router-crud/posts/new\" className=\"PostsPage_link\">Создать пост</NavLink>\r\n      {listing.map(item => <Card key={item.id} item={item} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostsPage;","import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport NewPostPage from './pages/NewPostPage';\nimport PostCardPage from './pages/PostCardPage';\nimport PostsPage from './pages/PostsPage';\n\nfunction App() {\n  \n  const url = 'http://localhost:7777/posts/';\n\n  const [listing, setListing] = useState([]);\n  const [message, setMessage] = useState('');\n\n  const reload = () => fetch(url)\n    .then(response => response.json())\n    .then(data => setListing(data))\n\n  const handleSubmit = () => {\n    const newItem = {\n      \"id\": 0,\n      \"content\": message\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(newItem),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(() => {\n        document.location.href = '/homeworks-router-crud/';\n      })\n  }\n\n  const handleMessage = evt => {\n    setMessage(evt);\n  }\n\n  const deletePost = id => {\n    fetch(url + id, {\n      method: 'DELETE'\n    })\n      .then(() => {\n        document.location.href = '/homeworks-router-crud/';\n      })\n  }\n\n  const changePostSubmit = (id, post) => {\n    const changedItem = {\n      \"id\": id,\n      \"content\": post\n    }\n\n    console.log(changedItem);\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(changedItem),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(() => {\n        document.location.href = '/homeworks-router-crud/';\n      })\n  }\n\n  useEffect(() => {\n    reload();\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route\n            path=\"/homeworks-router-crud/\"\n            exact\n            element={<PostsPage listing={listing} />}\n          />\n          <Route\n            path=\"/homeworks-router-crud/posts/new\"\n            exact\n            element={\n              <NewPostPage\n                listing={listing}\n                message={message}\n                handleSubmit={handleSubmit}\n                handleMessage={handleMessage}\n              />}\n            />\n          <Route\n            path=\"/homeworks-router-crud/posts/:id\"\n            exact\n            element={listing.length ? \n              (<PostCardPage listing={listing} deletePost={deletePost} changePostSubmit={changePostSubmit} />) : \n              <p>Loading...</p>\n            }\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}